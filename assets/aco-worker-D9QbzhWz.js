(function(){"use strict";function I(t,n,e,o,r,i,s,l,a){let h=[],f=[],u=g(t);const T=m(t);let c=[],N=99999999999;for(let b=0;b<l;b++){let d=[];for(let B=0;B<o;B++){let Q=A(g(u),r,i);d.push(Q)}f.push(d);let[K,v]=S(d,T);switch(v<N&&(c=[...K],N=v),n){case"as":u=L(g(t),d,s,o);break;case"elitist":u=j(t,c,N,e),u=L(g(t),d,s,o);break}h.push(g(u)),b%25===0&&a(100*b/l)}return[h,f]}function A(t,n,e){let o=[],r=M(t);for(O(t,r.name),o.push(r.name);o.length<t.length;){let i=F(t,r,n,e);if(i===null)break;if(i===void 0)throw new Error("Error: Something wrong happened when getting the nextCity!");O(t,i.name),o.push(i.name),r=i}return o}function M(t){return t[W(0,t.length-1)]}function S(t,n){let e=[],o=999999;for(const r of t){const i=P(r,n);i<o&&(e=[...r],o=i)}return[e,o]}function O(t,n){for(let e of t)if(e.name===n){e.isVisited=!0;break}}function F(t,n,e,o){const r=J(t,n);if(r.length==0)return null;if(r.length==1)return p(t,r[0]);let i=[];const s=x(n,r,e,o);for(const h of r){let f=V(n,r,h,s,e,o);i.push(f)}let l=0,a=Math.random();for(let h=0;h<i.length;h++){if(isNaN(i[h]))throw new Error("Error while calculating the probabilities of moving to the next city!");if(l+=i[h],a<l)return p(t,r[h])}throw new Error(`We went through all the cities but randomNumber=${a} is bigger than cumulative prob=${l}, probabilityOfMovingtoNeighbors=${i}`)}function J(t,n){return C(n).filter(o=>{let r=p(t,o);if(r!=null)return r.isVisited==!1;console.error(`City ${o} not Found in the array cities!`)})}function C(t){let n=[];for(let e in t.distanceTo)n.push(e);return n}function p(t,n){return t.find(e=>e.name===n)}function V(t,n,e,o,r,i){return n.length===0?0:n.length===1?1:(t.pheromoneTo[e]===0&&(t.pheromoneTo[e]+=1e-6),t.pheromoneTo[e]**r*(1/t.distanceTo[e])**i/o)}function x(t,n,e,o){let r=0;for(let i of n)t.pheromoneTo[i]===0&&(t.pheromoneTo[i]+=1e-6),r+=t.pheromoneTo[i]**e*(1/t.distanceTo[i])**o;return r}function y(t){const n=t.toFixed(3);return parseFloat(n)}function W(t,n){const e=Math.ceil(t),o=Math.floor(n);return Math.floor(Math.random()*(o-e+1)+e)}function g(t){let n=[];for(const e of t){let o={x:e.x,y:e.y,name:e.name,isVisited:e.isVisited,distanceTo:JSON.parse(JSON.stringify(e.distanceTo)),pheromoneTo:JSON.parse(JSON.stringify(e.pheromoneTo)),lineWidthTo:JSON.parse(JSON.stringify(e.lineWidthTo)),edgeAntFlow:JSON.parse(JSON.stringify(e.edgeAntFlow))};n.push(o)}return n}function E(t,n,e=.01,o=4){let i=(o-e)/n*t;return i<.01?.01:i>4?4:y(i)}function m(t){const n={};for(let e of t)for(let o in e.distanceTo)n[e.name+o]=e.distanceTo[o];return n}function P(t,n){let e=0;for(let o=0;o<t.length-1;o++){let r=t[o]+t[o+1];r in n?e+=n[r]:console.error(`Edge-${r} doesn't exist in the object allEdgesLengths!`)}return y(e+n[t[0]+t[t.length-1]])}function U(t,n){const e=m(t),o={};for(const r of n){const i=k(r,e);for(let s=0;s<r.length-1;s++){const l=r[s]+r[s+1],a=r[s+1]+r[s];l in o?(o[l]+=i,o[a]+=i):(o[l]=i,o[a]=i)}}return o}function k(t,n){return 1/P(t,n)}function L(t,n,e,o){const r=U(t,n),i=$(n);for(const s of t){for(let h in s.pheromoneTo){const f=s.name+h,u=s.pheromoneTo[h],T=G(u,r,f,e);let c=.01;f in i?c=E(i[f],o):c=E(0,o),s.pheromoneTo[h]=T,s.lineWidthTo[h]=c}const l=C(s),a=D(s.name,i,l);s.edgeAntFlow=JSON.parse(JSON.stringify(a))}return t.forEach(s=>s.isVisited=!1),t}function j(t,n,e,o){const r=_(n),i=o*(1/e);for(const s of t)for(const l in s.pheromoneTo){const a=s.name+l;r.has(a)&&(s.pheromoneTo[l]+=i)}return t}function _(t){const n=new Set;for(let e=0;e<t.length-1;e++)n.add(t[e]+t[e+1]);return n.add(t[t.length-1]+t[0]),n}function $(t){const n={};for(const e of t){for(let i=0;i<e.length-1;i++){const s=e[i]+e[i+1],l=e[i+1]+e[i];s in n&&l in n?(n[s]+=1,n[l]+=1):(n[s]=1,n[l]=1)}const o=e[e.length-1]+e[0],r=e[0]+e[e.length-1];o in n&&r in n?(n[o]+=1,n[r]+=1):(n[o]=1,n[r]=1)}return n}function D(t,n,e){let o={};for(const r of e){const i=t+r,s=r+t;i in n?o[r]=n[i]:s in n?o[r]=n[s]:o[r]=0}return o}function G(t,n,e,o){let r=0;return e in n&&(r=n[e]),(1-o)*t+r}function R(t,n){let e=[];const o=m(t);let r=[],i=999999999;for(let s of n){const[l,a]=w(s,o);a<i&&(r=[...l],i=a),e.push(r)}return e}function q(t,n){let e=[];const o=m(t);for(const r of n){const[i,s]=w(r,o);e.push(i)}return e}function w(t,n){let e=[],o=999999999;for(const r of t){const i=P(r,n);i<o&&(e=[...r],o=i)}return[e,o]}function H(t,n){return t.map(e=>{const o=Object.keys(e.pheromoneTo).reduce((r,i)=>(r[i]=n,r),{});return{...e,pheromoneTo:o}})}self.onmessage=function(t){const{cities:n,userControls:e}=t.data,o=H(n,Number(e.initialPheromone)),[r,i]=I(o,e.acoMode,Number(e.elitistWeight),Number(e.colonySize),Number(e.alpha),Number(e.beta),Number(e.rho),Number(e.nbrOfIterations),a=>{self.postMessage({type:"progress",value:a})});let s=R(o,i),l=q(o,i);self.postMessage({type:"result",updatedCities:o,ACOIterations:r,antsChosenPaths:i,localBestPathPerIteration:l,globalBestPathPerIteration:s})}})();
